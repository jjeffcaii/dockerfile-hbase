#! /bin/bash
set -e

exec_command=${HBASE_HOME}/bin/hbase
exec_daemon=${HBASE_HOME}/bin/hbase-daemon.sh

function usage(){
    echo HELP:
    echo "Supported commands:"
    echo "   master [--backup]     - Start a HBase Master or Backup-Master"
    echo "   region/regionserver   - Start a HBase Region"
    echo "   thrift2               - Start a HBase Thrift2 server"
    echo "   shell                 - Open a HBase shell interface"
    echo "   bash                  - Open a bash"
    echo "   help                  - print useful information and exit"
    echo ""
    echo "Other commands can be specified to run shell commands."
    echo "Set the environment variable HBASE_OPTS to pass additional"
    echo "arguments to the HBase process. "

    exit 0
}

export JAVA_OPTS="$JAVA_OPTS -Djava.net.preferIPv4Stack=true"

if [ ! -z "$MARATHON_APP_RESOURCE_MEM" ]; then
    HOST_MEM=`echo $MARATHON_APP_RESOURCE_MEM | awk '{print int($1)}'`
    if [ -z "$HBASE_HEAPSIZE" ]; then
        export HBASE_HEAPSIZE=$HOST_MEM
    fi
fi

HBASE_WEB_PORT=${HBASE_WEB_PORT:-${PORT0}}
HBASE_RPC_PORT=${HBASE_RPC_PORT:-${PORT1}}
#HBASE_QUORUM=${HBASE_QUORUM:-"1.zk.las,2.zk.las,3.zk.las,4.zk.las,5.zk.las"}
HBASE_QUORUM_ROOT=${HBASE_QUORUM_ROOT:-"/hbase"}
HBASE_ROOTDIR=${HBASE_ROOTDIR:-"hdfs:///hbase"}
HBASE_REGION_HANDLER=${HBASE_REGION_HANDLER:-100}

HBASE_COMMON_OPTS="-Dhbase.zookeeper.quorum=${HBASE_QUORUM} -Dhbase.regionserver.handler.count=${HBASE_REGION_HANDLER} -Dhbase.rootdir=${HBASE_ROOTDIR} -Dzookeeper.znode.parent=${HBASE_QUORUM_ROOT}"
HBASE_MASTER_OPTS="-Dhbase.master.port=${HBASE_RPC_PORT} -Dhbase.master.info.port=${HBASE_WEB_PORT}"
HBASE_REGION_OPTS="-Dhbase.regionserver.port=${HBASE_RPC_PORT} -Dhbase.regionserver.info.port=${HBASE_WEB_PORT}"

HBASE_OPTS="${HBASE_OPTS} ${HBASE_COMMON_OPTS}"

# generate hbase-site.xml from template with custom settings.
function generate_conf(){
    HBASE_SITE_XML=${HBASE_HOME}/conf/hbase-site.xml
    cp -f ${HBASE_SITE_XML}.template ${HBASE_SITE_XML}
    GENERATE_TIME=`date +%s`
    HBASE_SITE_XML_TMP="${TMPDIR}/hbase-site.xml.${GENERATE_TIME}"
    echo "    <!-- ////// auto generated by entrypoint at ${GENERATE_TIME} //////-->" >> ${HBASE_SITE_XML}
    echo "$1" | sed 's/-D//g' | xargs -n1 | awk -F '=' '{print "    <property>\n        <name>"$1"</name>\n        <value>"$2"</value>\n    </property>"}' >> ${HBASE_SITE_XML}
    cat ${HBASE_SITE_XML} | sed 's/<\/configuration>//g' > ${HBASE_SITE_XML_TMP}
    echo '</configuration>' >> ${HBASE_SITE_XML_TMP}
    mv ${HBASE_SITE_XML_TMP} ${HBASE_SITE_XML}
}

if [ "$1" = "master" ]; then
    generate_conf "${HBASE_OPTS} ${HBASE_MASTER_OPTS}"
    if [ -z "$2" ]; then
        $exec_daemon foreground_start master
    elif [ "$2" = "--backup" ]; then
        $exec_daemon foreground_start master --backup
    else
        usage
    fi
elif [ "$1" = "region" ]; then
    generate_conf "${HBASE_OPTS} ${HBASE_REGION_OPTS}"
    $exec_daemon foreground_start regionserver
elif [ "$1" = "regionserver" ]; then
    generate_conf "${HBASE_OPTS} ${HBASE_REGION_OPTS}"
    $exec_daemon foreground_start regionserver
elif [ "$1" = "thrift2" ]; then
    generate_conf "${HBASE_OPTS}"
    $exec_command thrift2 --infoport ${HBASE_WEB_PORT} --port ${HBASE_RPC_PORT} start
elif [ "$1" = "shell" ]; then
    generate_conf "${HBASE_OPTS}"
    $exec_command shell
elif [ "$1" = "bash" ]; then
    generate_conf "${HBASE_OPTS}"
    bash
else
    usage
fi
